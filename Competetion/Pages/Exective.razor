@page "/exective"
@inject IJSRuntime JSRuntime

<h3>Admin</h3>


<a href="/addnemp" class="btn btn-primary">Add Shipment Details</a>

<div class="card">
    @*    <div class="card-header">
    <h3 class="card-title">DataTable with default features</h3>
    </div> *@
    <!-- /.card-header -->
    <div class="card-body">

        <div class="table-responsive">
            <table id="myTable" class="table table-bordered table-striped ">
                <thead>
                    <tr>

                        <th>Id</th>
                        <th>Company_Name</th>
                        <th>Description </th>
                        <th>Assign User</th>
                    
                      
                        <th>Task Status</th>
                        <th>Edit/Delete</th>
                      

                    </tr>
                </thead>
                <tbody>

                    @foreach (DataRow row in dt.Rows)
                    {
                        <tr>
                            <td>@row["ShipmentID"]</td>
                            <td>@row["Company_Name"]</td>
                            <td>@row["Shipment_Weight"]</td>

                         <td>
                                <select class="form-select border-1 border-primary-subtle" aria-label="Default select example" >
                                    <option value="1">---Select Category---</option>
                                    @foreach (var emp in listuser)

                                    {

                                        <option value="@emp.FirstName">@emp.FirstName</option>

                                    }
                                </select>
                         </td>
                           
                           <td>
                               @if((bool)row["ShipmentStatus"])
                               {
                                   <span class="badge bg-success">Done</span>
                               }
                               else
                               {
                                   <span class="badge bg-danger">Not Done</span>
                               }
                           </td>
                           
                           
                            <td>  <a class="btn btn-primary" href="@($"/addnemp/{row["ShipmentID"]}")"><i class="fa-solid fa-pen-to-square"></i>Update</a>
                            <button class="btn btn-warning" @onclick=@(() =>onDelete(@row["ShipmentID"].ToString()))>Delete</button></td>
                        </tr>
                    }
                </tbody>
                <tfoot>

                    @*  <tr>
                    <td colspan="10">
                    <Pagination PI="pagingInfo" PageClassesEnabled="true" PageClass="Paging" PageClassSelected="active"></Pagination>
                    </td>
                    </tr> *@
                </tfoot>
            </table>
        </div>
    </div>
    <!-- /.card-body -->
</div>

@code {
    protected bool display = false;
    public string? PageName { get; set; } = "Add Medicine Record";
    public string? ButtonName { get; set; } = "Save";
    DataTable dt = new DataTable();
    public List<EntUserLogin> listuser = new List<EntUserLogin>();
    protected override async Task OnInitializedAsync()
    {
        dt = await DALCRUD.ReadData("SP_GetAllShipments");
        listuser = DALCRUD.Getusers();
    }

    private async Task onDelete(string id)
    {
        SqlParameter[] sp =
            {

            new SqlParameter("@ShipmentID",int.Parse(id)),

    };
        await DALCRUD.CRUD("SP_DeleteShipment", sp);
        await OnInitializedAsync();
    }
    protected async Task Update_Status(string tgId, string status)
    {
        bool myBool = bool.Parse(status);

        myBool = !myBool;


        SqlParameter[] sp =
           {

                 new SqlParameter("@ShipmentID",int.Parse(tgId)),


            new SqlParameter("@ShipmentStatus",myBool)

    };
        await DALCRUD.CRUD("SP_UpdateStatus", sp);

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initialize", null);
        }
    }
    public void NavigatetoMap()
    {
        nm.NavigateTo("/map", forceLoad:true);
    }


}
